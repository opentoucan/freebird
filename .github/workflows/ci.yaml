name: ci

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "!target/**"
      - "!.github/**"

env:
  REGISTRY: ghcr.io

jobs:

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Install required dependencies
        run: |
          apt update
          apt install -y sudo
          sudo apt install -y git curl
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo check
          cargo test --all-features
          cargo build --release
  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1


  release-pr:
    runs-on: ubuntu-latest
    needs: [commitlint, tests, formatting]
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write
    steps:
    - uses: googleapis/release-please-action@v4
      with:
        token: ${{ secrets.PAT }}
        release-type:
        # optional. customize path to release-please-config.json
        config-file: release-please-config.json
        # optional. customize path to .release-please-manifest.json
        manifest-file: .release-please-manifest.json
